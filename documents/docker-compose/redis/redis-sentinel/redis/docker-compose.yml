version: "3.0"      #docker-compose的版本号
 
networks:     #网络配置    
  redis-sentinel-1:
    driver: bridge
 
services:           #所有服务的入口  固定写法
  redis-master:     #自定义服务名
    image: redis:6.0.16     #我们所需要运行的镜像，没有的话，会自定为我们下载
    container_name: redis-master  #镜像运行后的容器名，自定义
    ports:
      - 6379:6379           #宿主机的6379映射容器内部的6379端口
    volumes:  #目录挂载 。分号 ： 右边代表容器内部的目录，分号左边表示宿主机的目录，
      - ./redis-node/redis-master/redis.conf:/redis.conf
      - ./redis-node/redis-master/data:/data
    command: bash -c "redis-server /redis.conf"  #容器启动后，运行的命令
    networks:
      - redis-sentinel-1
 
  redis-slave-1:
    image: redis:6.0.16
    container_name: redis-slave-1
    ports:
      - 6380:6380
    volumes:
      - ./redis-node/redis-slave-1/redis.conf:/redis.conf
      - ./redis-node/redis-slave-1/data:/data
    command: bash -c "redis-server /redis.conf  --slaveof 172.20.0.2 6379"
    depends_on:
      - redis-master
    networks:
      - redis-sentinel-1
 
  redis-slave-2:
    image: redis:6.0.16
    container_name: redis-slave-2
    ports:
      - 6381:6381
    volumes:
      - ./redis-node/redis-slave-2/redis.conf:/redis.conf
      - ./redis-node/redis-slave-2/data:/data
    command: bash -c "redis-server /redis.conf --slaveof 172.20.0.2 6379"
    depends_on:
      - redis-master
    networks:
      - redis-sentinel-1